name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '18 12 * * *'
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  find-out-changes:
    runs-on: ubuntu-latest
    outputs:
      dirs: ${{ steps.changed-files.outputs.all_changed_files }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          dir_names: true
          dir_names_max_depth: 1
          files_ignore: .github
          json: true
        
#       - name: List all changed files
#         run: |
#           for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
#             echo "$file was changed"
#           done
          
      - name: Echo
        run: echo ${{ steps.changed-files.outputs.all_changed_files }}

  build:
    strategy:
      matrix: ${{ fromJson(needs.find-out-changes.outputs.dirs) }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context:  ${{ matrix.dir }}
          platforms: linux/arm64
          push: true
          tags: user/app:latest
          
          
name: build-test

on:
  push:
    paths:
      - "**/Dockerfile"
      - "**/docker-entrypoint.sh"
      - genMatrix.js
      - ".github/workflows/build-test.yml"

  pull_request:
    paths:
      - "**/Dockerfile"
      - "**/docker-entrypoint.sh"
      - genMatrix.js
      - ".github/workflows/build-test.yml"

jobs:
  gen-matrix:
    name: generate-matrix
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Calculate file differences
        id: diff
        uses: tj-actions/changed-files@v35
        with:
          json: true
          json_raw_format: true

      - name: Generate testing matrix
        uses: actions/github-script@v6
        id: generator
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const script = require(`${process.env.GITHUB_WORKSPACE}/genMatrix.js`)
            return script(
              ${{ steps.diff.outputs.added_files }},
              ${{ steps.diff.outputs.modified_files }},
              ${{ steps.diff.outputs.renamed_files }},
            );

    outputs:
      matrix: ${{ steps.generator.outputs.result }}

  build:
    if: ${{ fromJson(needs.gen-matrix.outputs.matrix) }}
    needs: gen-matrix
    name: build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.gen-matrix.outputs.matrix) }}

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context:  ${{ matrix.folder }}
          platforms: linux/arm64
          push: true
          tags: user/app:latest
